{"version":3,"sources":["styles.module.css","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","useState","todoList","setTodoList","todo","setTodo","className","styles","contentWrapper","container","appTitle","subTitle","todoSection","map","todoListItem","todoName","todoDltBtn","onClick","name","filter","class","todoInputs","todoInput","type","value","onChange","event","target","addBtn","disabledAddBtn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,UAAY,0BAA0B,SAAW,yBAAyB,SAAW,yBAAyB,YAAc,4BAA4B,SAAW,yBAAyB,aAAe,6BAA6B,SAAW,yBAAyB,WAAa,2BAA2B,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,uBAAuB,eAAiB,iC,0KCiEteC,MA/Df,WAEE,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KAiBA,OACE,qBAAKC,UAAWC,IAAOC,eAAvB,SACE,sBAAKF,UAAWC,IAAOE,UAAvB,UACE,qBAAKH,UAAWC,IAAOG,SAAvB,wBACA,qBAAKJ,UAAWC,IAAOI,SAAvB,2BACA,sBAAKL,UAAWC,IAAOK,YAAvB,UACE,qBAAKN,UAAWC,IAAOL,SAAvB,SACGA,GACCA,EAASW,KAAI,SAACT,GAAD,OACX,sBAAKE,UAAWC,IAAOO,aAAvB,UACE,mBAAGR,UAAWC,IAAOQ,SAArB,SAAgCX,IAChC,wBACEE,UAAWC,IAAOS,WAClBC,QAAS,kBAfLC,EAewBd,EAd5CD,EAAYD,EAASiB,QAAO,SAACf,GAAD,OAAUA,IAASc,MAD5B,IAACA,GAaN,SAIE,mBAAGE,MAAM,2BAKnB,sBAAKd,UAAWC,IAAOc,WAAvB,UACE,uBACEf,UAAWC,IAAOe,UAClBC,KAAK,OACLL,KAAK,WACLM,MAAOpB,EACPqB,SAxCa,SAACC,GAAD,OAAWrB,EAAQqB,EAAMC,OAAOH,UA0C/C,wBACElB,UAAWF,EAAOG,IAAOqB,OAASrB,IAAOsB,eACzCZ,QAASb,EAtCC,WACpBD,EAAYD,EAAQ,sBAAOA,GAAP,CAAiBE,IAAQ,CAACA,IAJtBC,EAAQ,KAyCU,KAFlC,6BCzCGyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56addd73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"styles_contentWrapper__ONPCg\",\"container\":\"styles_container__8ihNL\",\"appTitle\":\"styles_appTitle__3eRQp\",\"subTitle\":\"styles_subTitle__3M6br\",\"todoSection\":\"styles_todoSection__3HaFq\",\"todoList\":\"styles_todoList__1a8uT\",\"todoListItem\":\"styles_todoListItem__23aGK\",\"todoName\":\"styles_todoName__1dWlA\",\"todoDltBtn\":\"styles_todoDltBtn__2eAUX\",\"todoInputs\":\"styles_todoInputs__3aXm2\",\"todoInput\":\"styles_todoInput__1gnb7\",\"addBtn\":\"styles_addBtn__1MDWo\",\"disabledAddBtn\":\"styles_disabledAddBtn__3iapo\"};","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nfunction App() {\r\n  // state for todoList\r\n  const [todoList, setTodoList] = useState();\r\n\r\n  // state for todo\r\n  const [todo, setTodo] = useState();\r\n\r\n  // handle todo onChange state\r\n  const handleTodoChange = (event) => setTodo(event.target.value);\r\n\r\n  // handle clear the state\r\n  const clearCaches = () => setTodo(\"\");\r\n\r\n  // handle add todo to list\r\n  const handleAddTodo = () => {\r\n    setTodoList(todoList ? [...todoList, todo] : [todo]);\r\n    clearCaches(); //clear the todo input\r\n  };\r\n\r\n  // handle delete action in todo\r\n  const handleDltBtn = (name) =>\r\n    setTodoList(todoList.filter((todo) => todo !== name));\r\n  return (\r\n    <div className={styles.contentWrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.appTitle}>To-do-App!</div>\r\n        <div className={styles.subTitle}>Add New To-Do</div>\r\n        <div className={styles.todoSection}>\r\n          <div className={styles.todoList}>\r\n            {todoList &&\r\n              todoList.map((todo) => (\r\n                <div className={styles.todoListItem}>\r\n                  <p className={styles.todoName}>{todo}</p>\r\n                  <button\r\n                    className={styles.todoDltBtn}\r\n                    onClick={() => handleDltBtn(todo)}\r\n                  >\r\n                    <i class=\"fas fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className={styles.todoInputs}>\r\n            <input\r\n              className={styles.todoInput}\r\n              type=\"text\"\r\n              name=\"todoName\"\r\n              value={todo}\r\n              onChange={handleTodoChange}\r\n            />\r\n            <button\r\n              className={todo ? styles.addBtn : styles.disabledAddBtn}\r\n              onClick={todo ? handleAddTodo : null}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}